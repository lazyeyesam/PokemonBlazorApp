@page "/Trainers"
@rendermode InteractiveServer
@inject DatabaseContext DbContext
@attribute [Authorize]

<PageTitle>Trainers</PageTitle>

<div class="d-flex justify-content-between">
    <div>
        <h3>Trainers</h3>
    </div>
    <div>
        <a @onclick="ShowAdd" class="btn btn-primary">Add Trainer</a>
    </div>
</div>

@if (showForm)
{
    <TrainersForm OnSaved="TrainerSaved" Model="trainer" />
}

<TrainersList OnEditClicked="ShowEdit" OnDeleteClicked="OnDelete" Trainers="trainers" />

@code {
    private Trainer? trainer;
    private bool showForm;
    private IQueryable<Trainer>? trainers;

    protected override async Task OnInitializedAsync()
    {
        await GetTrainers();
    }

    private async Task TrainerSaved()
    {
        showForm = false;
        await GetTrainers();
    }

    private async Task GetTrainers()
    {
        trainers = (await DbContext.Trainers.Include(t => t.Companion).ToListAsync()).AsQueryable();
    }

    private async void ShowAdd()
    {
        trainer = new Trainer();
        showForm = true;
    }

    private async Task ShowEdit(Trainer editTrainer)
    {
        trainer = editTrainer;
        showForm = true;
    }

    private async Task OnDelete()
    {
        showForm = false;
        await GetTrainers();
    }
}